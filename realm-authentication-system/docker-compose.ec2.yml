services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - app
    networks:
      - auth-network
    restart: unless-stopped
    mem_limit: 50m

  migrate:
    image: migrate/migrate
    volumes:
      - ./migrations:/migrations
    command: ["-path", "/migrations", "-database", "postgres://authuser:authpassword@postgres:5432/authdb?sslmode=disable", "up"]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - auth-network
    restart: "no"

  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    expose:
      - "8080"
    env_file:
      - .env.ec2
    environment:
      - DB_HOST=postgres
      - REDIS_HOST=redis
      - ENV=production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    networks:
      - auth-network
    restart: unless-stopped
    mem_limit: 100m

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=authuser
      - POSTGRES_PASSWORD=authpassword
      - POSTGRES_DB=authdb
      - POSTGRES_SHARED_PRELOAD_LIBRARIES=""
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - auth-network
    restart: unless-stopped
    mem_limit: 200m
    command: postgres -c shared_buffers=32MB -c effective_cache_size=128MB
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U authuser -d authdb"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 30s

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - auth-network
    restart: unless-stopped
    mem_limit: 50m
    command: redis-server --maxmemory 32mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:

networks:
  auth-network:
    driver: bridge